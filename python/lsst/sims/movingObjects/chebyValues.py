import os
import warnings
import numpy as np
import chebyshevUtils as cheb
from .orbits import Orbits
from .ephemerides import PyOrbEphemerides

__all__ = ['ChebyValues']


class ChebyValues(object):
    """Calculates positions, deltas, vmags and elongations, given a series of coefficients generated by ChebyFits.
    """
    def __init__(self):
        self.coeffs = None

    def setCoefficients(self, chebyFitsCoefficients):
        """Use coefficients calculated by ChebyFits,
        a dictionary of objId, tStart, tEnd, ra, dec, delta, vmag, and elongation lists.

        Parameters
        ----------
        coefficients : dictionary of coefficient lists.
            The Chebyshev polynomial coefficients as generated by chebyfits.
        """
        self.coeffs = chebyFitsCoefficients
        # Convert list of coefficients into numpy arrays.
        for k in self.coeffs:
            self.coeffs[k] = np.array(self.coeffs[k])

    def readCoefficients(self, chebyFitsFile):
        """Read coefficients from output file written by ChebyFits.

        Parameters
        ----------
        chebyFitsFile : str
            The filename of the coefficients file.
        """
        if not os.path.isfile(chebyFitsFile):
            raise IOError('Could not find chebyFitsFile at %s' % (chebyFitsFile))
        # Read the header to know how many coefficients are in each parameter.

